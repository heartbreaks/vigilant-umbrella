{"version":3,"sources":["redux/types.js","redux/actions.js","Components/CardToAddNewEmployer.jsx","Components/Card.jsx","Components/CardsList.jsx","App.js","redux/rootReducer.js","index.js"],"names":["SELECT_EMPLOYEE","UPDATE_INFO_EMPLOYEE","CREATE_NEW_EMPLOYEE","DELETE_EMPLOYEES","createNewEmployee","type","CardToAddNewEmployer","props","selectedEmployee","state","validated","onChangeHandler","bind","onSubmitHandler","prevProps","prevState","id","this","setState","event","fired","target","name","changes","value","updateEmployeeInfo","preventDefault","className","Form","onSubmit","Group","onChange","Label","Control","required","placeholder","disabled","disable","Text","max","birthday","as","custom","position","Check","label","checked","sex","Button","variant","React","Component","connect","payload","ownProps","employee","employees","find","elem","selectEmployee","getStyledTypes","Badge","pill","useEffect","setDisable","some","selected","Card","style","width","marginBottom","onClick","Body","Title","ListGroup","ListGroupItem","href","deleteEmployees","useState","display","flexDirection","length","map","card","Row","Col","justifyContent","children","initialState","store","createStore","action","test","Object","keys","formToEmployee","Date","now","concat","filteredState","filter","selectedEmplDel","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"kSAAaA,EAAkB,kBAClBC,EAAuB,uBACvBC,EAAsB,sBACtBC,EAAmB,mBCkBnBC,EAAoB,WAC/B,MAAO,CACLC,KAAMH,IClBJI,E,kDACJ,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,GADW,IAETC,EAAqBD,EAArBC,iBAFS,OAGjB,EAAKC,MAAL,2BAAkBD,GAAlB,IAAoCE,WAAW,IAE/C,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBANN,E,+DASAE,EAAWC,GAAY,IAAD,OACnCA,EAAUC,KAAOC,KAAKV,MAAMC,iBAAiBQ,IAC/CC,KAAKC,UAAS,kBAAM,EAAKX,MAAMC,sB,sCAInBW,GAAQ,IAAD,EACCF,KAAKR,MAAnBO,EADa,EACbA,GAAII,EADS,EACTA,MAEZ,GAA0B,UAAtBD,EAAME,OAAOC,KAAkB,CAAC,IAAD,EAC7BC,GAAO,mBAAMJ,EAAME,OAAOC,KAAOH,EAAME,OAAOG,OAAvC,mBAA8CR,GAA9C,GAGX,OAFAC,KAAKC,SAAL,eAAiBC,EAAME,OAAOC,KAAOH,EAAME,OAAOG,aAClDP,KAAKV,MAAMkB,mBAAmBF,GAIhCN,KAAKV,MAAMkB,mBAAmB,CAAEL,OAAQA,EAAOJ,S,sCAGjCG,GACdA,EAAMO,iBACNT,KAAKV,MAAMH,sB,+BAGH,IAAD,OACP,OACE,qBAAKuB,UAAU,qBAAf,SACE,eAACC,EAAA,EAAD,CAAMlB,UAAWO,KAAKR,MAAMC,UAAWmB,SAAUZ,KAAKJ,gBAAtD,UACE,eAACe,EAAA,EAAKE,MAAN,CAAYC,SAAUd,KAAKN,gBAA3B,UACE,cAACiB,EAAA,EAAKI,MAAN,iCACA,cAACJ,EAAA,EAAKK,QAAN,yBACEC,UAAQ,EACR7B,KAAK,OACL8B,YAAY,qBACZb,KAAM,QACF,CAAEc,SAAUnB,KAAKR,MAAM4B,UAL7B,IAMEb,MAAOP,KAAKR,MAAMa,QAEpB,cAACM,EAAA,EAAKU,KAAN,CAAWX,UAAU,aAArB,+DAKF,eAACC,EAAA,EAAKE,MAAN,CAAYC,SAAUd,KAAKN,gBAA3B,UACE,cAACiB,EAAA,EAAKI,MAAN,wFACA,cAACJ,EAAA,EAAKK,QAAN,yBACE5B,KAAK,OACLkC,IAAI,aACJjB,KAAM,WACNa,YAAY,6EACR,CAAEC,SAAUnB,KAAKR,MAAM4B,UAL7B,IAMEb,MAAOP,KAAKR,MAAM+B,YAEpB,cAACZ,EAAA,EAAKU,KAAN,CAAWX,UAAU,aAArB,4KAKF,eAACC,EAAA,EAAKE,MAAN,CAAYC,SAAUd,KAAKN,gBAA3B,UACE,cAACiB,EAAA,EAAKI,MAAN,qEACA,eAACJ,EAAA,EAAKK,QAAN,yBACEC,UAAQ,EACRO,GAAG,SACHnB,KAAM,WACNoB,QAAM,EACNlB,MAAOP,KAAKR,MAAMkC,UACd,CAAEP,SAAUnB,KAAKR,MAAM4B,UAN7B,cAQE,wBAAQb,MAAM,SAAd,oBACA,wBAAQA,MAAM,mDAAd,8DACA,wBAAQA,MAAM,yDAAd,oEACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,uCAAd,yDAIJ,eAACI,EAAA,EAAKE,MAAN,CAAYC,SAAUd,KAAKN,gBAA3B,UACE,cAACiB,EAAA,EAAKI,MAAN,iCACA,cAACJ,EAAA,EAAKgB,MAAN,yBACEvC,KAAK,QACLwC,MAAM,6CACNrB,MAAO,SACPF,KAAK,MACLN,GAAG,yBACC,CAAEoB,SAAUnB,KAAKR,MAAM4B,UAN7B,IAOES,QAA4B,WAAnB7B,KAAKR,MAAMsC,OAEtB,cAACnB,EAAA,EAAKgB,MAAN,yBACEvC,KAAK,QACLwC,MAAM,6CACNrB,MAAO,OACPF,KAAK,MACLN,GAAG,yBACC,CAAEoB,SAAUnB,KAAKR,MAAM4B,UAN7B,IAOES,QAA4B,SAAnB7B,KAAKR,MAAMsC,UAIxB,cAACnB,EAAA,EAAKE,MAAN,CAAYC,SAAUd,KAAKN,gBAA3B,SACE,cAACiB,EAAA,EAAKgB,MAAN,aACEvC,KAAK,SACLW,GAAG,gBACHM,KAAK,QACLuB,MAAM,8FACNC,QAAS7B,KAAKR,MAAMW,MACpBW,SAAU,WACR,EAAKb,SAAS,CAAEE,OAAQ,EAAKX,MAAMW,UAEjC,CAAEgB,SAAUnB,KAAKR,MAAM4B,aAI/B,cAACW,EAAA,EAAD,CAAQC,QAAQ,UAAU5C,KAAK,SAA/B,uE,GA1HyB6C,IAAMC,WAyI1BC,mBANf,SAAyB3C,GAGvB,MAAO,CAAED,iBAFoBC,EAArBD,oBAK8B,CAAEiB,mBDhIR,SAAA4B,GAChC,MAAO,CACLhD,KAAMJ,EACNoD,YC6H0DjD,qBAA/CgD,CACb9C,G,wDCnFa8C,mBAPf,SAAyB3C,EAAO6C,GAI9B,MAAO,CAAEC,SAHQ9C,EAAM+C,UAAUC,MAAK,SAAAC,GAAI,OAAIA,EAAK1C,IAAMsC,EAAStC,MAG/CP,QAAO+C,UAFN/C,EAAb+C,aAK+B,CAAEG,eFrDZ,SAAAN,GAC5B,MAAO,CACLhD,KAAML,EACNqD,aEkDWD,EAxDf,SAAsB7C,GAAQ,IACpBgD,EAAahD,EAAbgD,SAMR,SAASK,EAAevD,GACtB,OAAQA,GACN,IAAK,QACH,OACE,cAACwD,EAAA,EAAD,CAAOC,MAAI,EAACb,QAASM,EAASnC,MAAQ,SAAW,UAAjD,SACGmC,EAASnC,MAAQ,eAAO,uBAG/B,IAAK,MACH,OACE,cAACyC,EAAA,EAAD,CAAOC,MAAI,EAACb,QAAS,UAArB,SACmB,UAAhBM,EAASR,IAAkB,6CAAY,gDAQlD,OAvBAG,IAAMa,WAAU,WACdxD,EAAMyD,YAAYzD,EAAMiD,UAAUS,MAAK,SAAAP,GAAI,OAAIA,EAAKQ,gBAuBpD,eAACC,EAAA,EAAD,CACEC,MAAO,CAAEC,MAAO,QAASC,aAAc,GACvC3C,UAAW4B,EAASW,SAAW,gBAAkB,mBACjDK,QAAS,WACPhE,EAAMoD,eAAeJ,IAJzB,UAOE,cAACY,EAAA,EAAKK,KAAN,UACE,cAACL,EAAA,EAAKM,MAAN,UAAalB,EAASjC,SAExB,eAACoD,EAAA,EAAD,CAAW/C,UAAU,mBAArB,UACE,eAACgD,EAAA,EAAD,sEAA2BpB,EAASZ,YACpC,eAACgC,EAAA,EAAD,yFAA+BpB,EAASf,YACxC,eAACmC,EAAA,EAAD,kCAAqBf,EAAe,aAEtC,cAACO,EAAA,EAAKK,KAAN,UACE,eAACL,EAAA,EAAK7B,KAAN,CAAWsC,KAAK,IAAhB,mDAA6BhB,EAAe,oBCbrCR,mBALf,SAAyB3C,GAErB,MAAO,CAAE+C,UADa/C,EAAd+C,aAI4B,CAAEqB,gBHPX,WAC7B,MAAO,CACLxE,KAAMF,IGKiDC,qBAA5CgD,EA5Bf,SAAmB7C,GAAO,IAAD,EACS2C,IAAM4B,UAAS,GADxB,mBACdzC,EADc,KACL2B,EADK,KAQrB,OACI,gCACI,qBAAKhD,GAAG,kBAAkBoD,MAAO,CAAEW,QAAS,OAAQC,cAAe,UAAnE,SACDzE,EAAMiD,UAAUyB,OAAS,EAAI,mIAPzB1E,EAAMiD,UAAU0B,KAAI,SAAAC,GACzB,OAAO,cAAC,EAAD,CAAMnB,WAAYA,EAA0BhD,GAAImE,EAAKnE,IAAlBmE,EAAKnE,SAQjD,cAACoE,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACE,cAACrC,EAAA,EAAD,CAAQZ,SAAUC,EAASY,QAAQ,SAAS5C,KAAK,SAASkE,QAAS,kBAAMhE,EAAMsE,mBAA/E,kECGCzB,kBAAQ,KAARA,EAlBf,SAAa7C,GACX,OACE,sBAAKoB,UAAU,MAAf,UACE,4CACA,sBAAKyC,MAAO,CAAEW,QAAS,OAAQC,cAAe,MAAOM,eAAgB,gBAArE,UACE,cAAC,EAAD,IACA,qBAAKtE,GAAG,cAAR,SACGT,EAAMgF,WAGT,8BACE,cAAC,EAAD,e,QCVJC,EAAe,CACnBhC,UAAW,GACXhD,iBAAkB,CAChBQ,GAAI,EACJM,KAAM,GACNqB,SAAU,GACVH,SAAU,GACVpB,OAAO,EACPiB,SAAS,I,QCNPoD,EAAQC,aDUa,WAAmC,IAAlCjF,EAAiC,uDAAzB+E,EAAcG,EAAW,uCACnDnC,EAAc/C,EAAd+C,UACR,OAAQmC,EAAOtF,MACb,KAAKL,EACH,IAAIQ,EAAmBgD,EAAUC,MAAK,SAAAF,GAAQ,OAAIA,EAASvC,KAAO2E,EAAOtC,QAAQrC,MAGjF,OAFAR,EAAiB0D,UAAY1D,EAAiB0D,SAEvC,2BAAIzD,GAAX,IAAkBD,iBAAiB,2BAAMmF,EAAOtC,SAAd,IAAuBhB,SAAS,MACpE,KAAKpC,EACH,IAAM2F,EAAOC,OAAOC,KAAKH,EAAOtC,SAC5BE,EAAWC,EAAUC,MAAM,SAAAF,GAAQ,OAAIA,EAASvC,KAAO2E,EAAOtC,QAAQrC,MAG1E,OAFAuC,EAASqC,EAAK,IAAMD,EAAOtC,QAAQuC,EAAK,IAEjC,eAAKnF,GACd,KAAKP,EACH,IAAM6F,EAAiB,CAAC/E,GAAIgF,KAAKC,MAAO3E,KAAM,GAAIqB,SAAU,mDAAYH,SAAU,GAAIpB,OAAO,EAAOiB,SAAS,EAAO6B,UAAU,GAE9H,OAAO,2BAAIzD,GAAX,IAAkBD,iBAAiB,eAAKuF,GAAiBvC,UAAW/C,EAAM+C,UAAU0C,OAAOH,KAC7F,KAAK5F,EACH,IAAMgG,EAAgB1F,EAAM+C,UAAU4C,QAAO,SAAA1C,GAAI,OAAsB,IAAlBA,EAAKQ,YACpDmC,EAAkB,CAAErF,GAAI,EAAGM,KAAM,GAAIqB,SAAU,GAAIH,SAAU,GAAIpB,OAAO,EAAOiB,SAAS,GAE9F,OAAO,2BAAI5B,GAAX,IAAkB+C,UAAW2C,EAAe3F,iBAAkB6F,IAChE,QACE,OAAO5F,KClC0B6F,YAAQC,YAAgBC,OAE/DC,IAASC,OACP,cAAC,IAAD,CAAUjB,MAAOA,EAAjB,SACE,cAAC,EAAD,UACE,kyCAQJkB,SAASC,eAAe,W","file":"static/js/main.9020d449.chunk.js","sourcesContent":["export const SELECT_EMPLOYEE = \"SELECT_EMPLOYEE\";\r\nexport const UPDATE_INFO_EMPLOYEE = \"UPDATE_INFO_EMPLOYEE\";\r\nexport const CREATE_NEW_EMPLOYEE = \"CREATE_NEW_EMPLOYEE\";\r\nexport const DELETE_EMPLOYEES = \"DELETE_EMPLOYYES\";\r\n","import {\r\n  SELECT_EMPLOYEE,\r\n  UPDATE_INFO_EMPLOYEE,\r\n  CREATE_NEW_EMPLOYEE,\r\n  DELETE_EMPLOYEES,\r\n} from \"./types\";\r\n\r\nexport const selectEmployee = payload => {\r\n  return {\r\n    type: SELECT_EMPLOYEE,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const updateEmployeeInfo = payload => {\r\n  return {\r\n    type: UPDATE_INFO_EMPLOYEE,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const createNewEmployee = () => {\r\n  return {\r\n    type: CREATE_NEW_EMPLOYEE,\r\n  };\r\n};\r\n\r\nexport const deleteEmployees = () => {\r\n  return {\r\n    type: DELETE_EMPLOYEES,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateEmployeeInfo, createNewEmployee } from \"../redux/actions\";\r\n\r\nclass CardToAddNewEmployer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { selectedEmployee } = props;\r\n    this.state = { ...selectedEmployee, validated: false };\r\n\r\n    this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    this.onSubmitHandler = this.onSubmitHandler.bind(this)\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.id !== this.props.selectedEmployee.id) {\r\n      this.setState(() => this.props.selectedEmployee);\r\n    }\r\n  }\r\n\r\n  onChangeHandler(event) {\r\n    const { id, fired } = this.state;\r\n\r\n    if (event.target.name !== \"fired\") {\r\n      let changes = { [event.target.name]: event.target.value, id };\r\n      this.setState({ [event.target.name]: event.target.value });\r\n      this.props.updateEmployeeInfo(changes);\r\n      return;\r\n    }\r\n\r\n    this.props.updateEmployeeInfo({ fired: !fired, id  });\r\n  }\r\n\r\n  onSubmitHandler(event){\r\n    event.preventDefault()\r\n    this.props.createNewEmployee()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-for-employers\">\r\n        <Form validated={this.state.validated} onSubmit={this.onSubmitHandler}>\r\n          <Form.Group onChange={this.onChangeHandler}>\r\n            <Form.Label>ФИО</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"ФИО\"\r\n              name={\"name\"}\r\n              {...{ disabled: this.state.disable }}\r\n              value={this.state.name}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group onChange={this.onChangeHandler}>\r\n            <Form.Label>Дата рождения</Form.Label>\r\n            <Form.Control\r\n              type=\"date\"\r\n              max=\"2002-12-31\"\r\n              name={\"birthday\"}\r\n              placeholder=\"Дата рождения\"\r\n              {...{ disabled: this.state.disable }}\r\n              value={this.state.birthday}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Здесь могла быть ваша реклама.\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group onChange={this.onChangeHandler}>\r\n            <Form.Label>Должность</Form.Label>\r\n            <Form.Control\r\n              required\r\n              as=\"select\"\r\n              name={\"position\"}\r\n              custom\r\n              value={this.state.position}\r\n              {...{ disabled: this.state.disable }}\r\n            >\r\n              <option value=\"DevOps\">DevOps</option>\r\n              <option value=\"Дизигнер\">Дизигнер</option>\r\n              <option value=\"Сетевичок\">Сетевичок</option>\r\n              <option value=\"HR\">HR</option>\r\n              <option value=\"Стажер\">Стажер</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group onChange={this.onChangeHandler}>\r\n            <Form.Label>Пол</Form.Label>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"Женщина\"\r\n              value={\"female\"}\r\n              name=\"sex\"\r\n              id=\"formHorizontalRadios1\"\r\n              {...{ disabled: this.state.disable }}\r\n              checked={this.state.sex === \"female\"}\r\n            />\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"Мужчина\"\r\n              value={\"male\"}\r\n              name=\"sex\"\r\n              id=\"formHorizontalRadios2\"\r\n              {...{ disabled: this.state.disable }}\r\n              checked={this.state.sex === \"male\"}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group onChange={this.onChangeHandler}>\r\n            <Form.Check\r\n              type=\"switch\"\r\n              id=\"custom-switch\"\r\n              name=\"fired\"\r\n              label=\"Сотрудник уволен\"\r\n              checked={this.state.fired}\r\n              onChange={() => {\r\n                this.setState({ fired: !this.state.fired });\r\n              }}\r\n              {...{ disabled: this.state.disable }}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"warning\" type=\"submit\">\r\n            Добавить\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { selectedEmployee } = state;\r\n\r\n  return { selectedEmployee };\r\n}\r\n\r\nexport default connect(mapStateToProps, { updateEmployeeInfo, createNewEmployee })(\r\n  CardToAddNewEmployer\r\n);\r\n","import React from \"react\";\r\nimport { Card, ListGroupItem, ListGroup, Badge } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectEmployee } from \"../redux/actions\";\r\nfunction PersonalCard(props) {\r\n  const { employee } = props;\r\n\r\n  React.useEffect(() => {\r\n    props.setDisable(!props.employees.some(elem => elem.selected))\r\n  })\r\n\r\n  function getStyledTypes(type) {\r\n    switch (type) {\r\n      case \"fired\":\r\n        return (\r\n          <Badge pill variant={employee.fired ? \"danger\" : \"success\"}>\r\n            {employee.fired ? \"Да\" : \"Нет\"}\r\n          </Badge>\r\n        );\r\n      case \"sex\":\r\n        return (\r\n          <Badge pill variant={\"primary\"}>\r\n            {employee.sex == 'female' ? \"Женщина\" : \"Мужчина\"}\r\n          </Badge>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      style={{ width: \"18rem\", marginBottom: 5 }}\r\n      className={employee.selected ? 'selected-card' : \"card-of-employer\"}\r\n      onClick={() => {\r\n        props.selectEmployee(employee);\r\n      }}\r\n    >\r\n      <Card.Body>\r\n        <Card.Title>{employee.name}</Card.Title>\r\n      </Card.Body>\r\n      <ListGroup className=\"list-group-flush\">\r\n        <ListGroupItem>Должность: {employee.position}</ListGroupItem>\r\n        <ListGroupItem>Дата рождения: {employee.birthday}</ListGroupItem>\r\n        <ListGroupItem>Пол: {getStyledTypes(\"sex\")}</ListGroupItem>\r\n      </ListGroup>\r\n      <Card.Body>\r\n        <Card.Text href=\"#\">Уволен: {getStyledTypes(\"fired\")}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  const employee = state.employees.find(elem => elem.id == ownProps.id);\r\n  const {employees} = state\r\n\r\n  return { employee, state, employees };\r\n}\r\n\r\nexport default connect(mapStateToProps, { selectEmployee })(PersonalCard);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, Col, Row } from \"react-bootstrap\";\r\nimport Card from \"./Card\";\r\nimport { deleteEmployees, createNewEmployee } from \"../redux/actions\";\r\n\r\nfunction CardsList(props){\r\n    const [disable, setDisable] = React.useState(true)\r\n    \r\n    function getEmployeesCards(){\r\n        return props.employees.map(card => {\r\n          return <Card setDisable={setDisable} key={card.id} id={card.id} />;\r\n        })\r\n      }\r\n    return(\r\n        <div>\r\n            <div id=\"cards-employers\" style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          {props.employees.length < 1 ? 'Список сотрудников пуст' : getEmployeesCards()}\r\n        </div>\r\n        <Row>\r\n            <Col>\r\n              <Button disabled={disable} variant=\"danger\" type=\"submit\" onClick={() => props.deleteEmployees()}>\r\n                Удалить\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n    )\r\n}\r\nfunction mapStateToProps(state) {\r\n    const { employees } = state;\r\n    return { employees };\r\n}\r\n  \r\nexport default connect(mapStateToProps, { deleteEmployees, createNewEmployee })(CardsList)","import React from \"react\";\nimport \"./App.css\";\nimport CardToAddNewEmployer from \"./Components/CardToAddNewEmployer\";\nimport { connect } from \"react-redux\";\nimport CardsList from \"./Components/CardsList\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <h1>Kiss ya'll</h1>\n      <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\"}}>\n        <CardsList />\n        <div id=\"info-to-app\">\n          {props.children}\n          \n        </div>\n        <div>\n          <CardToAddNewEmployer />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(null)(\n  App\n);\n","import {\r\n  SELECT_EMPLOYEE,\r\n  UPDATE_INFO_EMPLOYEE,\r\n  CREATE_NEW_EMPLOYEE,\r\n  DELETE_EMPLOYEES\r\n} from \"./types\";\r\n\r\nconst initialState = {\r\n  employees: [],\r\n  selectedEmployee: {\r\n    id: 0,\r\n    name: \"\",\r\n    position: \"\",\r\n    birthday: \"\",\r\n    fired: false,\r\n    disable: true,\r\n  },\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n  const { employees } = state;\r\n  switch (action.type) {\r\n    case SELECT_EMPLOYEE:\r\n      let selectedEmployee = employees.find(employee => employee.id === action.payload.id);\r\n      selectedEmployee.selected = !selectedEmployee.selected\r\n\r\n      return {...state, selectedEmployee: { ...action.payload, disable: false}};\r\n    case UPDATE_INFO_EMPLOYEE:\r\n      const test = Object.keys(action.payload);\r\n      let employee = employees.find( employee => employee.id === action.payload.id);\r\n      employee[test[0]] = action.payload[test[0]];\r\n\r\n      return { ...state };\r\n    case CREATE_NEW_EMPLOYEE:\r\n      const formToEmployee = {id: Date.now(), name: \"\", position: \"Дизигнер\", birthday: \"\", fired: false, disable: false, selected: true};\r\n\r\n      return {...state, selectedEmployee: {...formToEmployee}, employees: state.employees.concat(formToEmployee)};\r\n    case DELETE_EMPLOYEES:\r\n      const filteredState = state.employees.filter(elem => elem.selected !== true)\r\n      const selectedEmplDel = { id: 0, name: \"\", position: \"\", birthday: \"\", fired: false, disable: true}\r\n\r\n      return {...state, employees: filteredState, selectedEmployee: selectedEmplDel}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { rootReducer } from \"./redux/rootReducer\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App>\n      <p>\n        Для того что бы поля стали активными необходимо выбрать сотрудника в\n        списке слева или нажать на кнопку добавить, если вы уже выбрали\n        сотрудника в списке и изменили что надо но необходимо теперь добавить,\n        нажмите кнопку добавить и все будет классно\n      </p>\n    </App>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}